[tox]
envlist = centos7-{filestore,bluestore}-{activate,dmcrypt_plain,dmcrypt_luks}
skipsdist = True

[testenv]
deps = mock
whitelist_externals =
    vagrant
    bash
    git
    sleep
    cp
passenv=*
setenv=
  ANSIBLE_CONFIG = {envdir}/tmp/ceph-ansible/ansible.cfg
  ANSIBLE_SSH_ARGS = -F {changedir}/vagrant_ssh_config -o ControlMaster=auto -o ControlPersist=600s -o PreferredAuthentications=publickey
  ANSIBLE_STDOUT_CALLBACK = debug
  VAGRANT_CWD = {changedir}
  CEPH_VOLUME_DEBUG = 1
  DEBIAN_FRONTEND=noninteractive
changedir=
  centos7-filestore-activate: {toxinidir}/centos7/filestore/activate
  centos7-bluestore-activate: {toxinidir}/centos7/bluestore/activate
  centos7-bluestore-dmcrypt_plain: {toxinidir}/centos7/bluestore/dmcrypt-plain
  centos7-bluestore-dmcrypt_luks: {toxinidir}/centos7/bluestore/dmcrypt-luks
  centos7-filestore-dmcrypt_plain: {toxinidir}/centos7/filestore/dmcrypt-plain
  centos7-filestore-dmcrypt_luks: {toxinidir}/centos7/filestore/dmcrypt-luks
commands=
  git clone -b {env:CEPH_ANSIBLE_BRANCH:master} --single-branch https://github.com/ceph/ceph-ansible.git {envdir}/tmp/ceph-ansible
  pip install -r {envdir}/tmp/ceph-ansible/tests/requirements.txt

  bash {toxinidir}/../scripts/vagrant_up.sh {env:VAGRANT_UP_FLAGS:"--no-provision"} {posargs:--provider=virtualbox}
  bash {toxinidir}/../scripts/generate_ssh_config.sh {changedir}

  cp {toxinidir}/../playbooks/deploy.yml {envdir}/tmp/ceph-ansible

  # use ceph-ansible to deploy a ceph cluster on the vms
  ansible-playbook -vv -i {changedir}/hosts {envdir}/tmp/ceph-ansible/deploy.yml --extra-vars "fetch_directory={changedir}/fetch ceph_dev_branch={env:CEPH_DEV_BRANCH:master} ceph_dev_sha1={env:CEPH_DEV_SHA1:latest} toxinidir={toxinidir}"

  # prepare nodes for testing with testinfra
  ansible-playbook -vv -i {changedir}/hosts {envdir}/tmp/ceph-ansible/tests/functional/setup.yml

  # test cluster state testinfra
  py.test --reruns 5 --reruns-delay 10 -n 4 --sudo -v --connection=ansible --ssh-config={changedir}/vagrant_ssh_config --ansible-inventory={changedir}/hosts {toxinidir}/../tests

  # make ceph-volume simple take over all the OSDs that got deployed, disabling ceph-disk
  ansible-playbook -vv -i {changedir}/hosts {changedir}/test.yml

  # reboot all vms
  bash {toxinidir}/../scripts/vagrant_reload.sh {env:VAGRANT_UP_FLAGS:"--no-provision"} {posargs:--provider=virtualbox}

  # wait 2 minutes for services to be ready
  sleep 120

  # retest to ensure cluster came back up correctly after rebooting
  py.test --reruns 5 --reruns-delay 10 -n 4 --sudo -v --connection=ansible --ssh-config={changedir}/vagrant_ssh_config --ansible-inventory={changedir}/hosts {toxinidir}/../tests

  vagrant destroy {env:VAGRANT_DESTROY_FLAGS:"--force"}
