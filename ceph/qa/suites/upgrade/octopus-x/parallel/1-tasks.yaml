tasks:
- install:
    branch: octopus
    exclude_packages:
      - ceph-volume
- print: "**** done install task..."
- print: "**** done start installing octopus cephadm ..."
- cephadm:
    image: quay.ceph.io/ceph-ci/ceph:octopus
    cephadm_branch: octopus
    cephadm_git_url: https://github.com/ceph/ceph
    conf:
      osd:
        #set config option for which cls modules are allowed to be loaded / used
        osd_class_load_list: "*"
        osd_class_default_list: "*"
    # deploy additional mons the "old" (octopus) way
    add_mons_via_daemon_add: true
    avoid_pacific_features: true
- print: "**** done end installing octopus cephadm ..."

- cephadm.shell:
    mon.a:
      - ceph fs volume create foo
- ceph.healthy:

- print: "**** done creating new fs"

- cephadm.shell:
    mon.a:
      - ceph config set mgr mgr/cephadm/use_repo_digest true --force
      - ceph config set mon mon_warn_on_insecure_global_id_reclaim false --force
      - ceph config set mon mon_warn_on_insecure_global_id_reclaim_allowed false --force

- print: "**** verifying SMART data exists"

- cephadm.shell:
    mon.a:
      # debugging
      - ceph device ls
      # ensure something is scraped
      - ceph device scrape-health-metrics
      # more than 0 devices
      - ceph device ls --format=json | jq -e  '. | length > 0'
      # dump metrics
      - "for devid in $(ceph device ls --format=json | jq -r  '.[].devid'); do ceph device get-health-metrics $devid; done"
      # check scraped sanity
      - "for devid in $(ceph device ls --format=json | jq -r  '.[].devid'); do ceph device get-health-metrics $devid | jq -e '. | length > 0'; done"
      # check device_health_metrics pool exists
      - rados --pool=device_health_metrics ls | wc -l

- print: "**** done cephadm.shell ceph config set mgr..."

- print: "**** done start parallel"
- parallel:
    - workload
    - upgrade-sequence
- print: "**** done end parallel"
